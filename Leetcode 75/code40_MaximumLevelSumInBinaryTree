class Solution {
    public int maxLevelSum(TreeNode root) {
        if(root == null){
            return 0;
        }
        Queue<TreeNode> queue = new LinkedList<>();
        queue.offer(root);
        int maxLevelSum = Integer.MIN_VALUE;
        int maxLevel = 0;
        int level = 1;
        while(!queue.isEmpty()){
            int levelSize = queue.size();
            int currLevelSum = 0;
            for(int i = 0; i < levelSize; i++){
                TreeNode curr = queue.poll();
                currLevelSum += curr.val;

                if(curr.left != null){
                    queue.offer(curr.left);
                }
                if(curr.right != null){
                    queue.offer(curr.right);
                }
            }
            if(currLevelSum > maxLevelSum){
                maxLevelSum = currLevelSum;
                maxLevel = level;
            }
            level++;
        }
        return maxLevel;
    }
}